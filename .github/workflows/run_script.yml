name: スクリプトを実行する

on:
  workflow_dispatch:
  schedule:
    - cron: '0 11 * * *'
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  run_script:
    runs-on: ubuntu-latest

    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v4

      - name: 前回の成果物をダウンロード
        uses: dawidd6/action-download-artifact@v10
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          name: artifact
          path: tmp
          if_no_artifact_found: ignore

      - name: Pythonの実行環境をセットアップ
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: 依存関係のインストール
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: リポジトリ内のPythonファイルを実行
        env:
          BLUESKY_HANDLE: ${{ secrets.BLUESKY_HANDLE }}
          BLUESKY_PASSWORD: ${{ secrets.BLUESKY_PASSWORD }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: python main.py "${BLUESKY_HANDLE}" "${BLUESKY_PASSWORD}" "${GEMINI_API_KEY}"

      - name: 成果物をアップロード
        uses: actions/upload-artifact@v4
        with:
          name: artifact
          path: tmp/
          retention-days: 10

  test_gemini_api:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' # Ensure it only runs on pull_request events
    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v4

      - name: Pythonの実行環境をセットアップ
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: 依存関係のインストール
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Gemini APIをテスト
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: python test_gemini_api.py --api_key "${{ secrets.GEMINI_API_KEY }}"
